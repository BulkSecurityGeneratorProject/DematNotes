entity Student {
    ine String required
    email String required pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/)
    mobilePhoneNumber String required minlength(10) maxlength(18) pattern(/^[+](\d{3})\)?(\d{3})(\d{5,6})$|^(\d{10,10})$/)
    fixePhoneNumber String required minlength(10) maxlength(18) pattern (/^[+](\d{3})\)?(\d{3})(\d{5,6})$|^(\d{10,10})$/)
    address String required 
    city String required
    postalCode String required pattern(/^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/)
    dateOfBirth LocalDate required
    placeOfBirth String required
}

entity InscriptionModule {
    inscriptionDate LocalDate required
    validation String maxlength(10)
    yearPeriod String required // Semestre 1 ou 2
}

entity Manager {
    email String required pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/)
    mobilePhoneNumber String required minlength(10) maxlength(18) pattern (/^[+](\d{3})\)?(\d{3})(\d{5,6})$|^(\d{10,10})$/)
    fixePhoneNumber String required minlength(10) maxlength(18) pattern (/^[+](\d{3})\)?(\d{3})(\d{5,6})$|^(\d{10,10})$/)
    address String required
    city String required
    postalCode String required pattern(/^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/)
    dateOfBirth LocalDate required
    placeOfBirth String required
}

entity Teacher {
    email String required pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/)
    mobilePhoneNumber String required minlength(10) maxlength(18) pattern (/^[+](\d{3})\)?(\d{3})(\d{5,6})$|^(\d{10,10})$/)
    fixePhoneNumber String required minlength(10) maxlength(18) pattern (/^[+](\d{3})\)?(\d{3})(\d{5,6})$|^(\d{10,10})$/)
    address String required
    city String required
    postalCode String required pattern(/^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/)
    dateOfBirth LocalDate required
    placeOfBirth String required
} 

entity Absence {
    startDate ZonedDateTime required
    endDate ZonedDateTime required
    reason String
}

entity DelayStudent {
    startDate ZonedDateTime required
    endDate ZonedDateTime required
    reason String
}

entity Intervention {
    type String required
    startDate ZonedDateTime required
    endDate ZonedDateTime required
}

entity Course {
    entitled String required
    description String
}

entity Module {
    yearPeriod String required // Semestre 1 ou 2
    optionModule Boolean required
}

entity Evaluation {
    average Double required
    coefficient Float required
    evaluationDate ZonedDateTime required
    comment String
}

entity SchoolReport {
    yearPeriod String required // Semestre 1 ou 2
    gradeAword String
    comment String
    creationDate LocalDate
}

entity School {
    wording String required
    phoneNumber String required minlength(10) maxlength(18) pattern (/^[+](\d{3})\)?(\d{3})(\d{5,6})$|^(\d{10,10})$/)
    address String required
    city String required
    postalCode String required pattern(/^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/)
    schoolLevel String required
}

entity Classroom {
    entitled String required
    option String
    division String
}

entity SchoolYear {
    startDate LocalDate required
    endDate LocalDate required
}

entity Document {
    entitled String required
    type String required
    visible Boolean required
    url String
}

relationship ManyToOne {
    Student{user} to User
    Teacher{user} to User
    Manager{user} to User
}

relationship OneToMany  {
    Student{absences} to Absence
    Student{delaystudents} to DelayStudent
    Student{documents} to Document
}

relationship ManyToOne {
    Student{schoolYear} to SchoolYear
    Student{classroom} to Classroom
    Student{school} to School
}

relationship ManyToOne {
    Evaluation{module} to Module
    Evaluation{student} to Student
}

relationship ManyToOne {
    InscriptionModule{module} to Module
    InscriptionModule{student} to Student
}

relationship OneToMany {
    Teacher{interventions} to Intervention
}

relationship ManyToOne {
    Intervention{module} to Module
}

relationship ManyToOne {
    Teacher{specialCourse} to Course
    Module{course} to Course
    Module{school} to School
}

relationship OneToMany {
    SchoolReport{evaluations} to Evaluation
}

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with mySuffix
